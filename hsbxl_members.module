<?php

use Drupal\hsbxl_members\Entity\Membership;
use Drupal\hsbxl_members\MembershipService;
use Drupal\Core\Datetime\DrupalDateTime;

/**
 * Implements hook_entity_insert().
 *
 * @param \Drupal\Core\Entity\EntityInterface $entity
 */
function hsbxl_members_entity_insert(Drupal\Core\Entity\EntityInterface $entity) {
  $config = \Drupal::config('hsbxl_members.settings');
  $membershipService = \Drupal::service('hsbxl_members.membership');


  // If the bundle is a bankstatement,
  // check if it was a membership payment.
  if ($entity->bundle() == 'bankstatement') {

    $amount = $entity->get('field_booking_amount')->getValue()[0]['value'];
    $memo = $entity->get('field_bankstatement_memo')->getValue()[0]['value'];
    $date = new DrupalDateTime($entity->get('field_bankstatement_date')->getValue()[0]['value']);


    if($amount > 0) {

      // lets query the users with the structured memo.
      $query = Drupal::service('entity.query')
        ->get('user')
        ->condition('field_structured_memo', $memo);
      $entity_ids = $query->execute();


      // We have a user, lets link it.
      if(current($entity_ids) > 0) {

        $client = \Drupal::entityTypeManager()->getStorage('user')->load(current($entity_ids));
        $first_name = $client->get('field_first_name')->getValue()[0]['value'];
        $last_name = $client->get('field_last_name')->getValue()[0]['value'];

        $membershipdata = [
          'field_membership_member' => $client,
          'type' => 'membership',
          'name' => 'membership ' . $first_name . ' ' . $last_name,
          'field_booking' => $entity->id(),
          'field_year' => $date->format('Y'),
          'field_month' => $date->format('m'),
          'user_id' => current($entity_ids)
        ];

        $membership = Membership::create($membershipdata);
        $membership->save();
      }
    }
  }
}